/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto.biblioteca.vista;

import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import proyecto.biblioteca.Biblioteca;
import static proyecto.biblioteca.Biblioteca.*;
import proyecto.biblioteca.modelo.AutoresE;
import proyecto.biblioteca.modelo.BibliotecaModel;
import proyecto.biblioteca.modelo.CategoriaE;
import proyecto.biblioteca.modelo.Material;

/**
 *
 * @author USUARIO
 */
public class BibliotecaGUI extends javax.swing.JFrame {

    public static Biblioteca b1;
    public static Object[][] data;
    public static TableModel modelo;
    public static String[] columnas = {"ID", "TITULO", "CODIGO", "AUTOR", "AÑO"};

    public static Object[][] dataA;
    public static TableModel modeloA;
    public static String[] columnasA = {"ID", "NOMBRE"};

    public static ArrayList<AutoresE> autoresArray;
    public static ArrayList<AutoresE> autoresSeleccionados = new ArrayList<AutoresE   >();

    /**
     * Creates new form BibliotecaGUI
     */
    public BibliotecaGUI() throws SQLException {
        b1 = new Biblioteca();
        initComponents();
        this.getContentPane().setBackground(Color.WHITE);
        setLocationRelativeTo(null);
        inicializarCombobox();
        tabla_Listar();
//        
//        if(tipoUsuario == 2){
//            modificar.setVisible(false);
//            eliminar.setVisible(false);
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        JLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        codigo = new javax.swing.JTextField();
        titulo = new javax.swing.JTextField();
        anio = new javax.swing.JFormattedTextField();
        agregar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        categorias = new javax.swing.JComboBox<>();
        autores = new javax.swing.JScrollPane();
        autoresT = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }

        };
        jPanel2 = new javax.swing.JPanel();
        JLabel2 = new javax.swing.JLabel();
        buscarID = new javax.swing.JTextField();
        modificar = new javax.swing.JButton();
        buscar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Biblioteca MinTIC");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        JLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        JLabel1.setText("Título:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Año:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Código:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Autor:");

        codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigoActionPerformed(evt);
            }
        });

        anio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        agregar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        agregar.setText("Agregar");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Categoría:");

        categorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoriasActionPerformed(evt);
            }
        });

        autoresT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        autoresT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                autoresTMouseClicked(evt);
            }
        });
        autores.setViewportView(autoresT);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(agregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(categorias, 0, 244, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(JLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addGap(29, 29, 29)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(autores, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(anio, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                                    .addComponent(titulo)
                                    .addComponent(codigo))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(autores, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(81, 81, 81)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(anio, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(categorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 370, -1));

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));

        JLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        JLabel2.setText("Buscar ID:");

        modificar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        modificar.setText("Modificar");
        modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarActionPerformed(evt);
            }
        });

        buscar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        buscar.setText("Buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        eliminar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        eliminar.setText("Eliminar");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(JLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(buscarID, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE))
                    .addComponent(buscar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(modificar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buscarID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 394, 370, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codigoActionPerformed

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        String titulo2 = titulo.getText();
        String codigo2 = codigo.getText();
        int anio2 = Integer.parseInt(anio.getText());
        String combo = (String) categorias.getSelectedItem();
        int id = Integer.parseInt(combo.substring(0, combo.indexOf(" ")));
        
        try {
            BibliotecaModel.agregarMaterial(new Material(titulo2,codigo2,autoresSeleccionados,anio2, id,1));
        } catch (SQLException ex) {
            Logger.getLogger(BibliotecaGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_agregarActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
//        try {
//            int idBuscar = Integer.parseInt(buscarID.getText());
//            Object[][] libro = b1.obtenerPorId(idBuscar);
//
//            if (libro[0][0] == null) {
//                JOptionPane.showMessageDialog(this, "Libro no existe");
//            } else {
//                titulo.setText((String) libro[0][1]);
//                codigo.setText((String) libro[0][2]);
//                //autor.setText((String) libro[0][3]);
//                anio.setValue(libro[0][4]);
//            }
//        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(this, "El valor ingresado no es un número");
//        }
    }//GEN-LAST:event_buscarActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
//        try {
//            int idBuscar = Integer.parseInt(buscarID.getText());
//            (Object[][] libro = b1.obtenerPorId(idBuscar);
//
//            if (libro[0][0] == null) {
//                JOptionPane.showMessageDialog(this, "Libro no existe");
//            } else {
////                b1.eliminar(idBuscar);
////
////                data = b1.listar();
////                modelo = new DefaultTableModel(data, columnas);
////                tabla.setModel(modelo);
//                actualizarModelo();
//                JOptionPane.showMessageDialog(this, "Libro eliminado con éxito");
//            }
//        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(this, "El valor ingresado no es un número");
//        }
    }//GEN-LAST:event_eliminarActionPerformed

    private void modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarActionPerformed
//        try {
//
//            int idBuscar = Integer.parseInt(buscarID.getText());
//            Object[][] libro = b1.obtenerPorId(idBuscar);
//            if (libro[0][0] == null) {
//                JOptionPane.showMessageDialog(this, "Libro no existe");
//            } else {
//                String titulo1 = titulo.getText();
//                String codigo1 = codigo.getText();
//                //String autor1 = autor.getText();
//                int anio1 = Integer.parseInt(anio.getText());
//
//                //b1.modificar(idBuscar, titulo1, codigo1, autor1, anio1);
//                JOptionPane.showMessageDialog(this, "Libro modificado con éxito");
//                actualizarModelo();
//            }
//
//        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(this, "El valor ingresado no es un número");
//        }

    }//GEN-LAST:event_modificarActionPerformed

    private void categoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoriasActionPerformed

    }//GEN-LAST:event_categoriasActionPerformed

    private void autoresTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_autoresTMouseClicked
        if (evt.getClickCount() == 2) {
            // TODO lo del clik derechoo
            int fila1;
            try {
                fila1 = autoresT.getSelectedRow();
                if (fila1 == -1) {
                    JOptionPane.showMessageDialog(null, "no se ha seleccionando ninguna fila");
                } else {
                    DefaultTableModel modelo = (DefaultTableModel) autoresT.getModel();
                    JOptionPane.showMessageDialog(null, (String) modelo.getValueAt(fila1, 1));

                    boolean validarAutor = false;
            
                    for(AutoresE  i : autoresSeleccionados) {
                        if (i.getId() == autoresArray.get(fila1).getId()) {
                            validarAutor = true;
                        }
                    }
                    
                    if(!validarAutor){
                        autoresSeleccionados.add(autoresArray.get(fila1));
                    }else{
                        JOptionPane.showMessageDialog(null, "El autor ya fue seleccionado"); 
                    }
                    //codigo.setText((String)modelo.getValueAt(fila1, 0));
                    //nombre.setText((String)modelo.getValueAt(fila1, 1));
//                    String estadoS=(String)modelo.getValueAt(fila1, 2);
//                    if(estadoS.equalsIgnoreCase("ACTIVO")){
//                        estado.setSelectedIndex(0);
//                    }else{
//                        estado.setSelectedIndex(1);
//                    }
//                    nombre.setEnabled(true);
//                    estado.setEnabled(true);
                }
            } catch (Exception e) {
            }
        }

    }//GEN-LAST:event_autoresTMouseClicked

    public void tabla_Listar() throws SQLException {
        DefaultTableModel modelo = new DefaultTableModel(null, new String[]{"ID", "Nombre"});
        autoresArray = BibliotecaModel.getAutores();
        for (AutoresE listadoObjetos1 : autoresArray) {
            String[] registro = new String[2];
            registro[0] = "" + listadoObjetos1.getId();
            registro[1] = "" + listadoObjetos1.getNombre();
            modelo.addRow(registro);
        }
        autoresT.setModel(modelo);
    }

    public void actualizarModelo() {
//        data = b1.listar();
//        modelo = new DefaultTableModel(data, columnas);
//        tabla.setModel(modelo);
    }

    public void inicializarCombobox() throws SQLException {
        ArrayList<CategoriaE> categorias2 = BibliotecaModel.getCategorias();
        for (int i = 0; i < categorias2.size(); i++) {
            //System.out.println(biblios.get(i).toString());
            categorias.addItem(categorias2.get(i).toString());

        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BibliotecaGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BibliotecaGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BibliotecaGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BibliotecaGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new BibliotecaGUI().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(BibliotecaGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLabel1;
    private javax.swing.JLabel JLabel2;
    public javax.swing.JButton agregar;
    public javax.swing.JFormattedTextField anio;
    javax.swing.JScrollPane autores;
    public javax.swing.JTable autoresT;
    public javax.swing.JButton buscar;
    public javax.swing.JTextField buscarID;
    public javax.swing.JComboBox<String> categorias;
    public javax.swing.JTextField codigo;
    public javax.swing.JButton eliminar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    public javax.swing.JButton modificar;
    public javax.swing.JTextField titulo;
    // End of variables declaration//GEN-END:variables
}
